{"version":3,"sources":["redux/table-reducer.js","components/Table.jsx","components/common/Preloader/Preloader.jsx","components/common/Search/Search.jsx","components/common/Pagination/Pagination.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["SET_USERS","LOAD","SET_USERS_SORTING","SET_USERS_FILTERING","SET_USERS_FRAGMENT","initialState","users","usersFiltering","usersFragment","isLoaded","getUsersThunk","dispatch","axios","get","then","response","usersFilter","data","results","type","map","user","name","first","last","gender","dob","age","email","phone","Table","useDispatch","useSelector","state","table","useState","sortingPosition","setSortingPosition","sortedField","setSortedField","useEffect","usersData","orderData","_","orderBy","usersSorting","sorted","setParams","field","shiftSortingPosition","getClassName","className","tabIndex","onClick","onKeyDown","e","key","firstName","lastName","Preloader","Search","valueInput","setValueInput","filter","toLowerCase","includes","toString","setUsersFilter","searchTable","onChange","target","value","placeholder","Pagination","setPages","pageCount","Math","ceil","length","pages","i","push","page","displayData","chunk","setUsersFragment","to","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","StrictMode","basename","process","document","getElementById"],"mappings":"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","file":"static/js/main.9ae1e15f.chunk.js","sourcesContent":["import axios from \"axios\";\r\n\r\nconst SET_USERS = 'SET_USERS'\r\nconst LOAD = 'LOAD'\r\nconst SET_USERS_SORTING = 'SET_USERS_SORTING';\r\nconst SET_USERS_FILTERING = 'SET_USERS_FILTERING';\r\nconst SET_USERS_FRAGMENT = 'SET_USERS_FRAGMENT';\r\n\r\nconst initialState = {\r\n    users: [],\r\n    usersFiltering: [],\r\n    usersFragment: [],\r\n    isLoaded: false\r\n}\r\n\r\n\r\nexport const tableReducer = (state = initialState, action) => {\r\n\r\n    switch (action.type) {\r\n        case SET_USERS:\r\n            return {\r\n                ...state,\r\n                users: [...action.users]\r\n            }\r\n\r\n        case SET_USERS_SORTING:\r\n            return {\r\n                ...state,\r\n                users: [...action.usersSorting]\r\n            }\r\n\r\n        case LOAD:\r\n            return {\r\n                ...state,\r\n                isLoaded: action.isLoaded\r\n            }\r\n\r\n        case SET_USERS_FILTERING:\r\n            return {\r\n                ...state,\r\n                usersFiltering: [...action.usersFiltering]\r\n            }\r\n\r\n        case SET_USERS_FRAGMENT:\r\n            return {\r\n                ...state,\r\n                usersFragment: [...action.usersFragment]\r\n            }\r\n\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    return {\r\n        type: SET_USERS,\r\n        users: users\r\n    }\r\n}\r\n\r\nexport const load = () => {\r\n    return {\r\n        type: LOAD,\r\n        isLoaded: true\r\n    }\r\n}\r\n\r\nexport const setUsersSorting = (usersSorting) => {\r\n    return {\r\n        type: SET_USERS_SORTING,\r\n        usersSorting\r\n    }\r\n}\r\n\r\nexport const setUsersFragment = (usersFragment = '') => {\r\n    return {\r\n        type: SET_USERS_FRAGMENT,\r\n        usersFragment\r\n    }\r\n}\r\n\r\nexport const setUsersFilter = (usersFiltering) => {\r\n    return {\r\n        type: SET_USERS_FILTERING,\r\n        usersFiltering\r\n    }\r\n}\r\n\r\nexport const getUsersThunk = () => {\r\n    return (dispatch) => {\r\n        axios.get('https://randomuser.me/api/1.3/?results=32')\r\n            .then(response => {\r\n                dispatch(setUsers(usersFilter(response.data.results)));\r\n                dispatch(load());\r\n            })\r\n    }\r\n}\r\n\r\nconst usersFilter = (users) => {\r\n    return users.map((user) => {\r\n        return {\r\n            'firstName': user.name.first,\r\n            'lastName': user.name.last,\r\n            'gender': user.gender,\r\n            'age': user.dob.age,\r\n            'email': user.email,\r\n            'phone': user.phone\r\n        }\r\n    })\r\n}\r\n","import {useDispatch, useSelector} from \"react-redux\";\r\nimport './Table.css'\r\nimport _ from 'lodash'\r\nimport {setUsersSorting} from \"../redux/table-reducer\";\r\nimport {useEffect, useState} from \"react\";\r\n\r\nexport const Table = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useSelector((state) => state.table.users);\r\n    const usersFragment = useSelector((state) => state.table.usersFragment);\r\n\r\n    const [sortingPosition, setSortingPosition] = useState(null);\r\n    const [sortedField, setSortedField] = useState(null);\r\n\r\n    useEffect(() => {\r\n\r\n        const sorted = () => {\r\n            const usersData = [...users];\r\n\r\n            if (sortedField) {\r\n                const orderData = _.orderBy(usersData, [sortedField], [sortingPosition]);\r\n                dispatch(setUsersSorting(orderData));\r\n            }\r\n        }\r\n\r\n        sorted();\r\n\r\n    }, [sortedField, sortingPosition])\r\n\r\n\r\n    const shiftSortingPosition = (field) => {\r\n        field === sortedField && sortingPosition === 'asc' ? setSortingPosition('desc')\r\n            : setSortingPosition('asc');\r\n    }\r\n\r\n    const setParams = (field) => {\r\n        setSortedField(field);\r\n        shiftSortingPosition(field);\r\n    }\r\n\r\n    const getClassName = (field) => {\r\n        return field === sortedField ? 'smart-table__title ' + sortingPosition\r\n            : 'smart-table__title'\r\n    }\r\n\r\n    return (\r\n        <table className=\"smart-table\">\r\n            <thead>\r\n            <tr>\r\n                <th tabIndex={0} className={getClassName('firstName')} onClick={() => {\r\n                    setParams('firstName')\r\n                }}\r\n                    onKeyDown={(e) => {\r\n                        e.key === 'Enter' && setParams('firstName')\r\n\r\n                    }}>First Name\r\n                </th>\r\n                <th tabIndex={0} className={getClassName('lastName')} onClick={() => {\r\n                    setParams('lastName')\r\n                }}\r\n                    onKeyDown={(e) => {\r\n                        e.key === 'Enter' && setParams('lastName')\r\n                    }}>Last Name\r\n                </th>\r\n                <th tabIndex={0} className={getClassName('gender')} onClick={() => {\r\n                    setParams('gender')\r\n                }}\r\n                    onKeyDown={(e) => {\r\n                        e.key === 'Enter' && setParams('gender')\r\n                    }}>Gender\r\n                </th>\r\n                <th tabIndex={0} className={getClassName('age')} onClick={() => {\r\n                    setParams('age')\r\n                }}\r\n                    onKeyDown={(e) => {\r\n                        e.key === 'Enter' && setParams('age')\r\n                    }}>Age\r\n                </th>\r\n                <th tabIndex={0} className={getClassName('email')} onClick={() => {\r\n                    setParams('email')\r\n                }}\r\n                    onKeyDown={(e) => {\r\n                        e.key === 'Enter' && setParams('email')\r\n                    }}>E-mail\r\n                </th>\r\n                <th tabIndex={0} className={getClassName('phone')} onClick={() => {\r\n                    setParams('phone')\r\n                }}\r\n                    onKeyDown={(e) => {\r\n                        e.key === 'Enter' && setParams('phone')\r\n                    }}>Phone\r\n                </th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n\r\n            {usersFragment.map(user => (\r\n                <tr key={user.email + user.phone}>\r\n                    <td className=\"smart-table__cell\">{user.firstName}</td>\r\n                    <td className=\"smart-table__cell\">{user.lastName}</td>\r\n                    <td className=\"smart-table__cell\">{user.gender}</td>\r\n                    <td className=\"smart-table__cell\">{user.age}</td>\r\n                    <td className=\"smart-table__cell\">{user.email}</td>\r\n                    <td className=\"smart-table__cell\">{user.phone}</td>\r\n                </tr>\r\n            ))}\r\n            </tbody>\r\n        </table>\r\n    )\r\n}","import './Preloader.css'\r\n\r\nexport const Preloader = () => {\r\n    return (\r\n        <div className=\"lds-ring\">\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n            <div></div>\r\n        </div>\r\n    )\r\n}","import './Search.css'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {useEffect, useState} from \"react\";\r\nimport {setUsersFilter} from \"../../../redux/table-reducer\";\r\n\r\n\r\nexport const Search = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useSelector((state) => state.table.users);\r\n\r\n    let [valueInput, setValueInput] = useState('')\r\n\r\n    useEffect(() => {\r\n        const searchTable = () => {\r\n            const usersData = [...users];\r\n\r\n            const usersFiltering = usersData.filter(user => {\r\n                return user['firstName'].toLowerCase().includes(valueInput.toLowerCase()) ||\r\n                    user['lastName'].toLowerCase().includes(valueInput.toLowerCase())\r\n                    || user['age'].toString().includes(valueInput)\r\n            })\r\n\r\n            dispatch(setUsersFilter(usersFiltering));\r\n        }\r\n\r\n        searchTable();\r\n\r\n    }, [valueInput, users])\r\n\r\n\r\n    return (\r\n        <input onChange={(e) => {\r\n            setValueInput(e.target.value)\r\n        }}\r\n               value={valueInput} placeholder='Search'/>\r\n    )\r\n\r\n\r\n}","import './Pagination.css'\r\nimport _ from 'lodash'\r\nimport {useDispatch, useSelector} from \"react-redux\";\r\nimport {setUsersFragment} from \"../../../redux/table-reducer\";\r\nimport {useEffect} from \"react\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nexport const Pagination = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const users = useSelector((state) => state.table.usersFiltering);\r\n\r\n    useEffect(\r\n        () => {\r\n            setPages(1);\r\n\r\n        }\r\n        , [users])\r\n\r\n    const rowCount = 10;\r\n    const pageCount = Math.ceil(users.length / rowCount);\r\n    const pages = [];\r\n    for (let i = 1; i <= pageCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    const setPages = (page) => {\r\n        const usersData = [...users];\r\n        const displayData = _.chunk(usersData, rowCount);\r\n        dispatch(setUsersFragment(displayData[page - 1]));\r\n    }\r\n\r\n\r\n    return (<div className=\"pagination\">\r\n            {pages.length > 1 &&\r\n            pages.map(page => {\r\n                return <Link to='/' key={page} onClick={() => {\r\n                    setPages(page)\r\n                }} className=\"pagination__item\">{page}</Link>\r\n            })}\r\n        </div>\r\n    )\r\n}","import './App.css';\nimport {Table} from \"./components/Table\";\nimport {useDispatch, useSelector} from \"react-redux\";\nimport {Preloader} from \"./components/common/Preloader/Preloader\";\nimport {getUsersThunk} from \"./redux/table-reducer\";\nimport {useEffect} from \"react\";\nimport {Search} from \"./components/common/Search/Search\";\nimport {Pagination} from \"./components/common/Pagination/Pagination\";\n\nfunction App() {\n\n    const dispatch = useDispatch();\n\n    useEffect(() => {\n            dispatch(getUsersThunk());\n        }, []\n    )\n    const load = useSelector((state) =>state.table.isLoaded)\n\n    if (!load) {return <Preloader /> }\n\n    return (\n        <div className=\"App\">\n            <div className=\"container\">\n                <div className=\"info\"> Интерактиваня таблица. При нажатии на название столбца строки\n                    таблицы сортируются по возрастанию, при повторном клике - по убыванию\n                    Имеется поиск по полям \"First Name\", \"Last Name\", \"Age\".\n                </div>\n                <Search/>\n                <Table />\n                <Pagination />\n            </div>\n        </div>\n    )\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware, combineReducers, createStore} from \"redux\";\r\nimport thunkMiddleware from \"redux-thunk\";\r\nimport {tableReducer} from \"./table-reducer\";\r\n\r\nconst reducers = combineReducers({\r\n    table: tableReducer\r\n})\r\n\r\nexport const store = createStore(reducers,applyMiddleware(thunkMiddleware))\r\n\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport {Provider} from \"react-redux\";\nimport {store} from \"./redux/redux-store\";\nimport {BrowserRouter as Router} from \"react-router-dom\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <React.StrictMode>\n            <Router basename={process.env.PUBLIC_URL}>\n                <App/>\n            </Router>\n        </React.StrictMode>\n    </Provider>,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}